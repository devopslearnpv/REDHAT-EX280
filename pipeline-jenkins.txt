pipeline {
    agent any
 
    environment {
        IMAGE_NAME = "prashanthvedarathna/hello-liberty:1.0"
        APP_NAME = "hello"
        NAMESPACE = "default"
    }
 
    stages {
        stage('Prepare YAML') {
            steps {
                script {
                    writeFile file: 'deployment.yaml', text: """
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APP_NAME}
  namespace: ${NAMESPACE}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ${APP_NAME}
  template:
    metadata:
      labels:
        app: ${APP_NAME}
    spec:
      containers:
      - name: ${APP_NAME}
        image: ${IMAGE_NAME}
        ports:
        - containerPort: 9080
      imagePullSecrets:
      - name: regcred
"""
 
                    writeFile file: 'service.yaml', text: """
apiVersion: v1
kind: Service
metadata:
  name: ${APP_NAME}-service
  namespace: ${NAMESPACE}
spec:
  selector:
    app: ${APP_NAME}
  ports:
  - protocol: TCP
    port: 9080
    targetPort: 9080
    nodePort: 30380
  type: NodePort
"""
                }
            }
        }
 
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh 'kubectl apply -f deployment.yaml'
                    sh 'kubectl apply -f service.yaml'
                }
            }
        }
 
        stage('Verify') {
            steps {
                sh 'kubectl get all -l app=$APP_NAME -n $NAMESPACE'
                sh 'kubectl get svc $APP_NAME-service -n $NAMESPACE'
            }
        }
    }
 
    post {
        success {
            echo "Application deployed successfully!"
        }
        failure {
            echo "Deployment failed!"
        }
    }
}